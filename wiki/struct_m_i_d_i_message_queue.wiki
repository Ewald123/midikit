#sidebar contents
#summary Queue for MIDI message objects. 
#labels Documentation, Struct

= MIDIMessageQueue =
Queue for MIDI message objects. 
{{{

struct MIDIMessageQueue;
}}}

<wiki:toc max_depth="3"/>


--------------------------------------------------------------------------------
== Creation and destruction ==
Creating, destroying and reference counting of [struct_m_i_d_i_message_queue MIDIMessageQueue] objects. 

--------------------------------------------------------------------------------

=== `struct MIDIMessageQueue * MIDIMessageQueueCreate` ===
Create a [struct_m_i_d_i_message_queue MIDIMessageQueue] instance. 
{{{
struct MIDIMessageQueue * MIDIMessageQueueCreate();
}}}

Allocate space and initialize a [struct_m_i_d_i_message_queue MIDIMessageQueue] instance.


==== Return ====
a pointer to the created device structure on success. a `NULL` pointer if the device could not created. 

--------------------------------------------------------------------------------

=== `void MIDIMessageQueueDestroy` ===
Destroy a [struct_m_i_d_i_message_queue MIDIMessageQueue] instance. 
{{{
void MIDIMessageQueueDestroy(struct MIDIMessageQueue *queue);
}}}

Free all resources occupied by the queue and release all referenced messages.


==== Parameters ====
|| *Name* || *Description * ||
|| queue || The message queue.  ||


--------------------------------------------------------------------------------

=== `void MIDIMessageQueueRetain` ===
Retain a [struct_m_i_d_i_message_queue MIDIMessageQueue] instance. 
{{{
void MIDIMessageQueueRetain(struct MIDIMessageQueue *queue);
}}}

Increment the reference counter of a message queue so that it won't be destroyed.


==== Parameters ====
|| *Name* || *Description * ||
|| queue || The message queue.  ||


--------------------------------------------------------------------------------

=== `void MIDIMessageQueueRelease` ===
Release a [struct_m_i_d_i_message_queue MIDIMessageQueue] instance. 
{{{
void MIDIMessageQueueRelease(struct MIDIMessageQueue *queue);
}}}

Decrement the reference counter of a message queue. If the reference count reached zero, destroy the message queue.


==== Parameters ====
|| *Name* || *Description * ||
|| queue || The message queue.  ||


--------------------------------------------------------------------------------
== Queueing operations ==
Basic queue operations to store and retrieve messages. 

--------------------------------------------------------------------------------

=== `int MIDIMessageQueueGetLength` ===
Get the length of a message queue. 
{{{
int MIDIMessageQueueGetLength(struct MIDIMessageQueue *queue, size_t *length);
}}}


==== Parameters ====
|| *Name* || *Description * ||
|| queue || The message queue.  ||
|| length || The length.  ||

==== Return Values ====
|| *Value* || *Description * ||
|| 0 || on success.  ||
|| >0 || if the length could not be determined.  ||


--------------------------------------------------------------------------------

=== `int MIDIMessageQueuePush` ===
Add a message to the end queue. 
{{{
int MIDIMessageQueuePush(struct MIDIMessageQueue *queue, struct MIDIMessage *message);
}}}


==== Parameters ====
|| *Name* || *Description * ||
|| queue || The message queue.  ||
|| message || The message.  ||

==== Return Values ====
|| *Value* || *Description * ||
|| 0 || on success.  ||
|| >0 || if the item could not be added.  ||


--------------------------------------------------------------------------------

=== `int MIDIMessageQueuePeek` ===
Get the message at the beginning of the queue but do not remove it. 
{{{
int MIDIMessageQueuePeek(struct MIDIMessageQueue *queue, struct MIDIMessage **message);
}}}


==== Parameters ====
|| *Name* || *Description * ||
|| queue || The message queue.  ||
|| message || The message.  ||

==== Return Values ====
|| *Value* || *Description * ||
|| 0 || on success.  ||
|| >0 || if the item could not be fetched.  ||


--------------------------------------------------------------------------------

=== `int MIDIMessageQueuePop` ===
Remove the first message in the queue and store it. 
{{{
int MIDIMessageQueuePop(struct MIDIMessageQueue *queue, struct MIDIMessage **message);
}}}


==== Parameters ====
|| *Name* || *Description * ||
|| queue || The queue.  ||
|| message || The message.  ||

==== Return Values ====
|| *Value* || *Description * ||
|| 0 || on success.  ||
|| >0 || if the item could not be fetched or removed.  ||


--------------------------------------------------------------------------------
== Public Attributes == 
`home jpommerening Private midikit midi message_queue c size_t`home jpommerening Private midikit midi message_queue c size_t MIDIMessageQueue::refsrefs`size_t`size_t MIDIMessageQueue::lengthlength`struct MIDIMessageList *`struct MIDIMessageList* MIDIMessageQueue::firstfirst`struct MIDIMessageList *`struct MIDIMessageList* MIDIMessageQueue::lastlast