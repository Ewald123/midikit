#summary Delegate to respond to received messages. 
#labels Documentation, Struct, Public

= MIDIDeviceDelegate =

<wiki:toc max_depth="3"/>



--------------------------------------------------------------------------------
== Public Attributes == 
`int(*`MIDIDeviceDelegate::recv_nof)(struct MIDIDevice *device, MIDIChannel channel, MIDIKey key, MIDIVelocity velocity)recv_nofNote off callback. MIDIDevice::MIDIDeviceReceiveNoteOff`int(*`MIDIDeviceDelegate::recv_non)(struct MIDIDevice *device, MIDIChannel channel, MIDIKey key, MIDIVelocity velocity)recv_nonNote on callback. MIDIDevice::MIDIDeviceReceiveNoteOn`int(*`MIDIDeviceDelegate::recv_pkp)(struct MIDIDevice *device, MIDIChannel channel, MIDIKey key, MIDIPressure pressute)recv_pkpPolyphonic key pressure callback. MIDIDevice::MIDIDeviceReceivePolyphonicKeyPressure`int(*`MIDIDeviceDelegate::recv_cc)(struct MIDIDevice *device, MIDIChannel channel, MIDIControl control, MIDIValue value)recv_ccControl change callback. MIDIDevice::MIDIDeviceReceiveControlChange`int(*`MIDIDeviceDelegate::recv_pc)(struct MIDIDevice *device, MIDIChannel channel, MIDIProgram program)recv_pcProgram change callback. MIDIDevice::MIDIDeviceReceiveProgramChange`int(*`MIDIDeviceDelegate::recv_cp)(struct MIDIDevice *device, MIDIChannel channel, MIDIPressure value)recv_cpChannel pressure callback. MIDIDevice::MIDIDeviceReceiveChannelPressure`int(*`MIDIDeviceDelegate::recv_pwc)(struct MIDIDevice *device, MIDIChannel channel, MIDILongValue value)recv_pwcPitch wheel change callback. MIDIDevice::MIDIDeviceReceivePitchWheelChange`int(*`MIDIDeviceDelegate::recv_sx)(struct MIDIDevice *device, MIDIManufacturerId manufacturer_id, size_t size, void *data, uint8_t fragment)recv_sxSystem exclusive callback. MIDIDevice::MIDIDeviceReceiveSystemExclusive`int(*`MIDIDeviceDelegate::recv_tcqf)(struct MIDIDevice *device, MIDIValue time_code_type, MIDIValue value)recv_tcqfTime code quarter frame callback. MIDIDevice::MIDIDeviceReceiveTimeCodeQuarterFrame`int(*`MIDIDeviceDelegate::recv_spp)(struct MIDIDevice *device, MIDILongValue value)recv_sppSong position pointer callback. MIDIDevice::MIDIDeviceReceiveSongPositionPointer`int(*`MIDIDeviceDelegate::recv_ss)(struct MIDIDevice *device, MIDIValue value)recv_ssSong select callback. MIDIDevice::MIDIDeviceReceiveSongSelect`int(*`MIDIDeviceDelegate::recv_tr)(struct MIDIDevice *device)recv_trTune request callback. MIDIDevice::MIDIDeviceReceiveTuneRequest`int(*`MIDIDeviceDelegate::recv_eox)(struct MIDIDevice *device)recv_eoxEnd of exclusive callback. MIDIDevice::MIDIDeviceReceiveEndOfExclusive`int(*`MIDIDeviceDelegate::recv_rt)(struct MIDIDevice *device, MIDIStatus status, MIDITimestamp)recv_rtReal time callback. MIDIDevice::MIDIDeviceReceiveRealTime