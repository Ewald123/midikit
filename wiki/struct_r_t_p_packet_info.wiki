#sidebar wiki/contents
#summary RTP packet information. 
#labels Documentation, Struct

= RTPPacketInfo =
RTP packet information. 
{{{
#include <rtp.h>

struct RTPPacketInfo;
}}}

<wiki:toc max_depth="3"/>


--------------------------------------------------------------------------------
== Public Attributes == 
`struct [struct_r_t_p_peer RTPPeer] *`RTPPacketInfo::peerpeerThe peer associated with the packet. This can either be the peer that originally sent the packet we did receive or it can be the peer that the packet should be sent to. RTPMIDISession::RTPMIDISessionSendRTPSession::RTPSessionCreateRTPSession::RTPSessionReceivePacketRTPSession::RTPSessionSendRTPSession::RTPSessionSendPacket`unsigned char`RTPPacketInfo::paddingpaddingThe number of padding bytes following the payload. If the padding bit is set, the packet contains one or more additional padding octets at the end which are not part of the payload. The last octet of the padding contains a count of how many padding octets should be ignored, including itself. Padding may be needed by some encryption algorithms with fixed block sizes or for carrying several RTP packets in a lower-layer protocol data unit. RTPMIDISession::RTPMIDISessionSendRTPSession::RTPSessionCreateRTPSession::RTPSessionReceivePacketRTPSession::RTPSessionSendPacket`unsigned char`RTPPacketInfo::extensionextensionSet if the first `iovec` element is used as a header extension. If the extension bit is set, the fixed header MUST be followed by exactly one header extension. RTPMIDISession::RTPMIDISessionSendRTPSession::RTPSessionCreateRTPSession::RTPSessionReceivePacketRTPSession::RTPSessionSendRTPSession::RTPSessionSendPacket`unsigned char`RTPPacketInfo::csrc_countcsrc_countThe CSRC count contains the number of CSRC identifiers that follow the fixed header. RTPMIDISession::RTPMIDISessionSendRTPSession::RTPSessionCreate`unsigned char`RTPPacketInfo::markermarkerThe interpretation of the marker is defined by a profile. It is intended to allow significant events such as frame boundaries to be marked in the packet stream. A profile MAY define additional marker bits or specify that there is no marker bit by changing the number of bits in the payload type field. RTPMIDISession::RTPMIDISessionSendRTPSession::RTPSessionCreate`unsigned char`RTPPacketInfo::payload_typepayload_typeThis field identifies the format of the RTP payload and determines its interpretation by the application. A profile MAY specify a default static mapping of payload type codes to payload formats. RTPMIDISession::RTPMIDISessionSendRTPSession::RTPSessionCreate`unsigned short`RTPPacketInfo::sequence_numbersequence_numberThe sequence number increments by one for each RTP data packet sent, and may be used by the receiver to detect packet loss and to restore packet sequence. The initial value of the sequence number SHOULD be random (unpredictable) to make known-plaintext attacks on encryption more difficult, even if the source itself does not encrypt, because the packets may flow through a translator that does. RTPMIDISession::RTPMIDISessionSendRTPSession::RTPSessionReceivePacketRTPSession::RTPSessionSendPacket`unsigned long`RTPPacketInfo::timestamptimestampThe timestamp reflects the sampling instant of the first octet in the RTP data packet. The sampling instant MUST be derived from a clock that increments monotonically and linearly in time to allow synchronization and jitter calculations. RTPMIDISession::RTPMIDISessionReceiveRTPMIDISession::RTPMIDISessionSendRTPSession::RTPSessionReceivePacketRTPSession::RTPSessionSendPacket`unsigned long`RTPPacketInfo::ssrcssrcThe SSRC field identifies the synchronization source. This identifier SHOULD be chosen randomly, with the intent that no two synchronization sources within the same RTP session will have the same SSRC identifier. RTPSession::RTPSessionCreateRTPSession::RTPSessionReceivePacketRTPSession::RTPSessionSendPacket`unsigned long`RTPPacketInfo::csrc[16]csrcThe CSRC list identifies the contributing sources for the payload contained in this packet. The number of identifiers is given by the CC field. If there are more than 15 contributing sources, only 15 can can be identified. CSRC identifiers are inserted by mixers, using the SSRC identifiers of contributing sources. For example, for audio packets the SSRC identifiers of all sources that were mixed together to create a packet are listed, allowing correct talker indication at the receiver. `size_t`RTPPacketInfo::total_sizetotal_sizeThe total size of the sent or received RTP packet. The total size includes all RTP-Header informatio and the padding. It only acts as an information for the payload implementation. It is never read or interpreted by the RTP session. RTPSession::RTPSessionReceivePacketRTPSession::RTPSessionSendPacket`size_t`RTPPacketInfo::payload_sizepayload_sizeThe total payload size including all `iovec` elements. RTPMIDISession::RTPMIDISessionSendRTPSession::RTPSessionReceivePacketRTPSession::RTPSessionSendPacket`size_t`RTPPacketInfo::iovleniovlenThe number of elements in the `iovec` structure. RTPMIDISession::RTPMIDISessionReceiveRTPMIDISession::RTPMIDISessionSendRTPSession::RTPSessionCreateRTPSession::RTPSessionReceiveRTPSession::RTPSessionReceivePacketRTPSession::RTPSessionSendRTPSession::RTPSessionSendPacket`struct iovec *`RTPPacketInfo::ioviovA number of iovec elements that belong to the packet. RTPMIDISession::RTPMIDISessionReceiveRTPMIDISession::RTPMIDISessionSendRTPSession::RTPSessionCreateRTPSession::RTPSessionReceiveRTPSession::RTPSessionReceivePacketRTPSession::RTPSessionSendRTPSession::RTPSessionSendPacket